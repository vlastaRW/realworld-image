
#pragma once

#include <ConfigCustomGUIImpl.h>


class ATL_NO_VTABLE CConfigGUIColorTransformations :
	public CCustomConfigResourcelessWndImpl<CConfigGUIColorTransformations>,
	public CDialogResize<CConfigGUIColorTransformations>
{
public:
	CConfigGUIColorTransformations()
	{
	}

	enum
	{
		IDC_CGCT_BRIGHTNESS_SLIDER = 100, IDC_CGCT_BRIGHTNESS_EDIT,
		IDC_CGCT_CONTRAST_SLIDER, IDC_CGCT_CONTRAST_EDIT,
		IDC_CGCT_GAMMA_SLIDER, IDC_CGCT_GAMMA_EDIT,
		IDC_CGCT_SATURATION_SLIDER, IDC_CGCT_SATURATION_EDIT
	};

	BEGIN_DIALOG_EX(0, 0, 120, 141, 0)
		DIALOG_FONT_AUTO()
		DIALOG_STYLE(WS_CHILD|WS_CLIPCHILDREN|WS_CLIPSIBLINGS|DS_CONTROL)
		DIALOG_EXSTYLE(0)
	END_DIALOG()

	BEGIN_CONTROLS_MAP()
		CONTROL_LTEXT(_T("[0409]&Brightness:[0405]&Jas:"), IDC_STATIC, 0, 0, 120, 8, WS_VISIBLE, 0)
		CONTROL_CONTROL(_T(""), IDC_CGCT_BRIGHTNESS_SLIDER, TRACKBAR_CLASS, TBS_AUTOTICKS | WS_TABSTOP | WS_VISIBLE, 0, 12, 89, 18, 0)
		CONTROL_EDITTEXT(IDC_CGCT_BRIGHTNESS_EDIT, 90, 13, 30, 12, WS_VISIBLE | WS_TABSTOP | ES_RIGHT | ES_AUTOHSCROLL, 0)
		CONTROL_LTEXT(_T("[0409]&Contrast [%]:[0405]&Kontrast [%]:"), IDC_STATIC, 0, 37, 120, 8, WS_VISIBLE, 0)
		CONTROL_CONTROL(_T(""), IDC_CGCT_CONTRAST_SLIDER, TRACKBAR_CLASS, TBS_AUTOTICKS | WS_TABSTOP | WS_VISIBLE, 0, 49, 89, 18, 0)
		CONTROL_EDITTEXT(IDC_CGCT_CONTRAST_EDIT, 90, 50, 30, 12, WS_VISIBLE | WS_TABSTOP | ES_RIGHT | ES_AUTOHSCROLL, 0)
		CONTROL_LTEXT(_T("[0409]&Gamma:[0405]&Gama:"), IDC_STATIC, 0, 74, 120, 8, WS_VISIBLE, 0)
		CONTROL_CONTROL(_T(""), IDC_CGCT_GAMMA_SLIDER, TRACKBAR_CLASS, TBS_AUTOTICKS | WS_TABSTOP | WS_VISIBLE, 0, 86, 89, 18, 0)
		CONTROL_EDITTEXT(IDC_CGCT_GAMMA_EDIT, 90, 87, 30, 12, WS_VISIBLE | WS_TABSTOP | ES_RIGHT | ES_AUTOHSCROLL, 0)
		CONTROL_LTEXT(_T("[0409]&Saturation [%]:[0405]&Saturace [%]:"), IDC_STATIC, 0, 111, 120, 8, WS_VISIBLE, 0)
		CONTROL_CONTROL(_T(""), IDC_CGCT_SATURATION_SLIDER, TRACKBAR_CLASS, TBS_AUTOTICKS | WS_TABSTOP | WS_VISIBLE, 0, 123, 89, 18, 0)
		CONTROL_EDITTEXT(IDC_CGCT_SATURATION_EDIT, 90, 124, 30, 12, WS_VISIBLE | WS_TABSTOP | ES_RIGHT | ES_AUTOHSCROLL, 0)
	END_CONTROLS_MAP()

	BEGIN_MSG_MAP(CConfigGUIColorTransformations)
		CHAIN_MSG_MAP(CDialogResize<CConfigGUIColorTransformations>)
		CHAIN_MSG_MAP(CCustomConfigResourcelessWndImpl<CConfigGUIColorTransformations>)
		MESSAGE_HANDLER(WM_INITDIALOG, OnInitDialog)
		MESSAGE_HANDLER(WM_HSCROLL, OnHScroll)
		if (uMsg == WM_RW_CFGSPLIT) { if (lParam) *reinterpret_cast<float*>(lParam) = 1.0f; return TRUE; }
	END_MSG_MAP()

	BEGIN_DLGRESIZE_MAP(CConfigGUIColorTransformations)
		DLGRESIZE_CONTROL(IDC_CGCT_BRIGHTNESS_SLIDER, DLSZ_SIZE_X)
		DLGRESIZE_CONTROL(IDC_CGCT_BRIGHTNESS_EDIT, DLSZ_MOVE_X)
		DLGRESIZE_CONTROL(IDC_CGCT_CONTRAST_SLIDER, DLSZ_SIZE_X)
		DLGRESIZE_CONTROL(IDC_CGCT_CONTRAST_EDIT, DLSZ_MOVE_X)
		DLGRESIZE_CONTROL(IDC_CGCT_GAMMA_SLIDER, DLSZ_SIZE_X)
		DLGRESIZE_CONTROL(IDC_CGCT_GAMMA_EDIT, DLSZ_MOVE_X)
		DLGRESIZE_CONTROL(IDC_CGCT_SATURATION_SLIDER, DLSZ_SIZE_X)
		DLGRESIZE_CONTROL(IDC_CGCT_SATURATION_EDIT, DLSZ_MOVE_X)
	END_DLGRESIZE_MAP()

	BEGIN_CONFIGITEM_MAP(CConfigGUIColorTransformations)
		CONFIGITEM_EDITBOX(IDC_CGCT_BRIGHTNESS_EDIT, CFGID_BRIGHTNESS)
		CONFIGITEM_EDITBOX(IDC_CGCT_CONTRAST_EDIT, CFGID_CONTRAST)
		CONFIGITEM_EDITBOX(IDC_CGCT_GAMMA_EDIT, CFGID_GAMMA)
		CONFIGITEM_EDITBOX(IDC_CGCT_SATURATION_EDIT, CFGID_SATURATION)
		CONFIGITEM_SLIDER_TRACKUPDATE(IDC_CGCT_BRIGHTNESS_SLIDER, CFGID_BRIGHTNESS)
		CONFIGITEM_SLIDER_TRACKUPDATE(IDC_CGCT_CONTRAST_SLIDER, CFGID_CONTRAST)
		CONFIGITEM_CONTEXTHELP(IDC_CGCT_GAMMA_SLIDER, CFGID_GAMMA)
		CONFIGITEM_SLIDER_TRACKUPDATE(IDC_CGCT_SATURATION_SLIDER, CFGID_SATURATION)
	END_CONFIGITEM_MAP()

	LRESULT OnInitDialog(UINT UNREF(a_uMsg), WPARAM UNREF(a_wParam), LPARAM UNREF(a_lParam), BOOL& a_bHandled)
	{
		CTrackBarCtrl wnd = GetDlgItem(IDC_CGCT_BRIGHTNESS_SLIDER);
		wnd.SetTicFreq(255);
		wnd.SetPageSize(64);
		wnd = GetDlgItem(IDC_CGCT_CONTRAST_SLIDER);
		wnd.SetTicFreq(100);
		wnd.SetPageSize(20);
		wnd = GetDlgItem(IDC_CGCT_SATURATION_SLIDER);
		wnd.SetTicFreq(100);
		wnd.SetPageSize(20);

		m_wndGammaSlider = GetDlgItem(IDC_CGCT_GAMMA_SLIDER);
		m_wndGammaSlider.SetRange(0, 40);
		m_wndGammaSlider.SetPageSize(5);
		m_wndGammaSlider.SetTicFreq(10);
		ExtraConfigNotify();

		DlgResize_Init(false, false, 0);

		return 1;
	}

	LRESULT OnHScroll(UINT UNREF(a_uMsg), WPARAM a_wParam, LPARAM a_lParam, BOOL& a_bHandled)
	{
		if (a_lParam && reinterpret_cast<HWND>(a_lParam) != m_wndGammaSlider)
		{
			a_bHandled = FALSE;
			return 0;
		}

		//if (LOWORD(a_wParam) == SB_ENDSCROLL)
		//{
		//	BOOL b;
		//	OnEnKillFocus(0, IDC_CGCT_GAMMA_EDIT, GetDlgItem(IDC_CGCT_GAMMA_EDIT), b);
		//	return 0;
		//}
		//else
		{
			TCHAR sz[32] = _T("");
			_stprintf(sz, _T("%g"), powf(10.0f, m_wndGammaSlider.GetPos()*0.05f-1.0f));
			SetDlgItemText(IDC_CGCT_GAMMA_EDIT, sz);
			BOOL b;
			OnEnKillFocus(0, IDC_CGCT_GAMMA_EDIT, GetDlgItem(IDC_CGCT_GAMMA_EDIT), b);
			return 1;
		}
	}

	void ExtraConfigNotify()
	{
		if (m_wndGammaSlider.m_hWnd)
		{
			CConfigValue cVal;
			M_Config()->ItemValueGet(CComBSTR(CFGID_GAMMA), &cVal);
			m_wndGammaSlider.SetPos(logf(cVal.operator float())*8.686f+20.0f);
		}
	}

private:
	CTrackBarCtrl m_wndGammaSlider;
};

